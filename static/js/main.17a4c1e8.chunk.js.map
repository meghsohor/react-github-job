{"version":3,"sources":["useFetchJobs.js","Job.js","JobsPagination.js","SearchForm.js","App.js","index.js"],"names":["BASE_URL","ACTIONS","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","Job","job","lastChild","useState","showDetails","setDetails","Card","className","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","undefined","day","month","year","toLocaleTimeString","Badge","variant","location","style","wordBreak","source","how_to_apply","src","company_logo","alt","Text","Button","onClick","prevShowDetails","Collapse","in","description","JobsPagination","page","setPage","Pagination","Prev","prevPage","Item","Ellipsis","active","Next","SearchForm","params","onParamChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","xs","Check","full_time","id","label","App","setParams","useReducer","dispatch","useEffect","cancelTokenforJobs","axios","CancelToken","cancelTokenforNextPage","get","cancelToken","token","markdown","then","res","data","catch","e","isCancel","length","cancel","useFetchJobs","Container","param","target","prevParams","Alert","aria-hidden","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17a4c1e8.chunk.js","sourcesContent":["import { useReducer, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n/* const BASE_URL = 'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json'; */\r\nconst BASE_URL = 'https://jobs.github.com/positions.json';\r\n\r\nconst ACTIONS = {\r\n    MAKE_REQUEST: 'make-request',\r\n    GET_DATA: 'get-data',\r\n    ERROR: 'error',\r\n    UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\r\n}\r\nfunction reducer (state, action) {\r\n    switch (action.type) {\r\n        case ACTIONS.MAKE_REQUEST:\r\n            return {loading: true, jobs: []};\r\n        case ACTIONS.GET_DATA:\r\n            return {...state, loading: false, jobs: action.payload.jobs };\r\n        case ACTIONS.ERROR:\r\n            return { ...state, loading: false, error: action.payload.error, jobs: [] };\r\n        case ACTIONS.UPDATE_HAS_NEXT_PAGE:\r\n            return { ...state, loading: false, hasNextPage: action.payload.hasNextPage };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default function useFetchJobs(params, page) {\r\n    const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true});\r\n\r\n    useEffect(() => {\r\n        const cancelTokenforJobs = axios.CancelToken.source();\r\n        const cancelTokenforNextPage = axios.CancelToken.source();\r\n\r\n        dispatch({ type:ACTIONS.MAKE_REQUEST });\r\n\r\n        /* Fetching the jobs from the Github API */\r\n        axios.get(BASE_URL, {\r\n            cancelToken: cancelTokenforJobs.token,\r\n            params: {markdown: true, page: page, ...params}\r\n        }).then(res => {\r\n            dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data} });\r\n        }).catch(e => {\r\n            if (axios.isCancel(e)) return;\r\n            dispatch({ type: ACTIONS.ERROR, payload: { error: e } });\r\n        })\r\n\r\n        /* Checking if there is a list of jobs in the next page */\r\n        axios.get(BASE_URL, {\r\n            cancelToken: cancelTokenforNextPage.token,\r\n            params: { markdown: true, page: page, ...params }\r\n        }).then(res => {\r\n            dispatch({ type: ACTIONS.UPDATE_HAS_NEXT_PAGE, payload: { hasNextPage: res.data.length !== 0 } });\r\n        }).catch(e => {\r\n            if (axios.isCancel(e)) return;\r\n            dispatch({ type: ACTIONS.ERROR, payload: { error: e } });\r\n        })\r\n\r\n        return () => {\r\n            cancelTokenforJobs.cancel();\r\n            cancelTokenforNextPage.cancel();\r\n        }\r\n    }, [params, page]);\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Card, Badge, Button, Collapse } from 'react-bootstrap';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nexport default function Job({ job, lastChild }) {\r\n    const [showDetails, setDetails] = useState(false);\r\n    return (\r\n        <Card className='mb-4'>\r\n            <Card.Body>\r\n                <div className='d-flex justify-content-between align-items-start'>\r\n                    <div className='flex-fill'>\r\n                        <Card.Title>\r\n                            {job.title} - <span className='text-muted font-weight-light'>{job.company}</span>\r\n                        </Card.Title>\r\n                        <Card.Subtitle className='text-muted mb-2'>\r\n                            {new Date(job.created_at).toLocaleDateString(undefined, {\r\n                                day: 'numeric',\r\n                                month: 'long',\r\n                                year: 'numeric'\r\n                            })} &nbsp;\r\n                            <span className='small'>{\r\n                                new Date(job.created_at).toLocaleTimeString()\r\n                            }</span>\r\n                        </Card.Subtitle>\r\n                        <Badge variant='secondary'>{job.type}</Badge>\r\n                        <Badge variant='secondary' className='ml-2'>{job.location}</Badge>\r\n\r\n                        <div className='job-how_to_apply' style={{ wordBreak: 'break-word' }}>\r\n                            <ReactMarkdown source={job.how_to_apply} />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <img className='img-thumbnail d-none d-md-block job-poster' src={job.company_logo} alt={job.company} />\r\n                </div>\r\n                \r\n                <Card.Text>\r\n                    <Button \r\n                        variant='primary' type='button' \r\n                        onClick={\r\n                            () => setDetails( prevShowDetails => !prevShowDetails )\r\n                        }\r\n                    >\r\n                            {showDetails ? 'Hide Details' : 'View Details'}\r\n                        </Button>\r\n                </Card.Text>\r\n\r\n                <Collapse in={showDetails}>\r\n                    <div className='mt-4'>\r\n                        <ReactMarkdown source={job.description} />\r\n                    </div>\r\n                </Collapse>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Pagination} from 'react-bootstrap';\r\n\r\nexport default function JobsPagination({ page, setPage, hasNextPage }) {\r\n    return (\r\n        <Pagination>\r\n            {page > 1 && <Pagination.Prev onClick={() => setPage(prevPage => prevPage - 1)} /> }\r\n\r\n            {page > 1 && <Pagination.Item onClick={() => setPage(prevPage => 1)}>1</Pagination.Item>}\r\n\r\n            {page > 2 && <Pagination.Ellipsis />}\r\n\r\n            {page > 2 && <Pagination.Item onClick={() => setPage(prevPage => prevPage - 1)}>{page - 1}</Pagination.Item> }\r\n\r\n            <Pagination.Item active>{page}</Pagination.Item>\r\n\r\n            {hasNextPage && <Pagination.Item onClick={() => setPage(prevPage => prevPage + 1)}>{page + 1}</Pagination.Item>}\r\n\r\n            {hasNextPage && <Pagination.Next onClick={() => setPage(prevPage => prevPage + 1)} /> }\r\n        </Pagination>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Form, Col} from 'react-bootstrap';\r\n\r\nexport default function SearchForm({ params, onParamChange}) {\r\n    //const { description = '', location = '', full_time = false } = params || {};\r\n    return (\r\n        <Form>\r\n            <Form.Row className='align-items-end'>\r\n                <Form.Group as={Col}>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control type='text' onChange={onParamChange} value={params.description} name='description' />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                    <Form.Label>Location</Form.Label>\r\n                    <Form.Control type='text' onChange={onParamChange} value={params.location} name='location' />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} xs='auto' className='mb-4'>\r\n                    <Form.Check type='checkbox' onChange={onParamChange} value={params.full_time} name='full_time' id='full-time' label='Only Full Time' />\r\n                </Form.Group>\r\n            </Form.Row>\r\n        </Form>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\nimport useFetchJobs from './useFetchJobs';\nimport { Container, Alert } from 'react-bootstrap';\n\n//Own components\nimport Job from './Job';\nimport JobsPagination from './JobsPagination';\nimport SearchForm from './SearchForm';\n\nimport './App.css';\n\nfunction App() {\n  const [params, setParams] = useState({description: '', location: '', full_time: false});\n  const [page, setPage] = useState(1);\n  const { jobs, loading, error, hasNextPage } = useFetchJobs(params, page);\n\n  function handleParamChange (e) {\n    const param = e.target.name;\n    const value = e.target.value;\n    setPage(1);\n\n    setParams(prevParams => {\n      return {...prevParams, [param]: value }\n    })\n  }\n  return (\n    <Container className='my-4'>\n      <h1 className=\"display-4 page-title\">Github Jobs</h1>\n\n      {!error > 0 && <SearchForm params={params} onParamChange={handleParamChange} />}\n\n      {loading && !error && \n        <Alert variant='info' className='h4 font-weight-normal'>\n          <span className='mr-4'><i className=\"fa fa-spin fa-spinner\" aria-hidden=\"true\"></i></span>\n          Loading...\n        </Alert>\n      }\n\n      {error && <Alert variant='danger' className='h4 font-weight-normal'>\n        <span className='mr-4'><i className=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i></span>\n        Error. Try reloading the page.\n        </Alert>}\n\n      {jobs.length > 0 && <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />}\n\n      {!loading && !error && \n        jobs.map((job) => {\n          return (\n            <Job key={job.id} job={job} />\n          )\n        })\n      }\n\n      {jobs.length > 0 && <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}